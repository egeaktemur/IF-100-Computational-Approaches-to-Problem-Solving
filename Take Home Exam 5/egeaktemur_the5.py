# -*- coding: utf-8 -*-
"""egeaktemur_the5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rtNXIqYRM1Pq2oyVmocl-MF-UA__I1Q_
"""

#Ege Aktemur
def funcwordcounter():
  fileInput = open("book.txt","r",encoding="latin-1")
  countDictionary = {}
  for line in fileInput:
    words = line.split(" ")
    for word in words:
      word = word.strip('".,!?:; ')
      word = word.lower()
      if word != "\n" and word != " " and word != "":
        if word in countDictionary:
          countDictionary[word] += 1
        else:
          countDictionary[word] = 1
  keyslist = list(countDictionary.keys())
  fileInput.close()
  return keyslist , countDictionary

def wordinputtaker():
  wordinput= input("Please enter the word/words you want to check: ") 
  wordinput = wordinput.strip()
  wordlist = wordinput.split(" ")
  return wordlist

def levenshtein(str1, str2):
  for a in range(len(keyslist)):
    size_x = len(str1) + 1
    size_y = len(str2) + 1
    matrix = []
    for i in range(size_x):
      temp = [0]*size_y
      matrix.append(temp)
    for i in range(size_x):
      matrix[i][0] = i
    for i in range(size_y):
      matrix[0][i] = i
    for x in range(1, size_x):
      for y in range(1, size_y):
        if str1[x-1] == str2[y-1]:
          matrix [x][y] = min(matrix[x-1][y] + 1, matrix[x-1][y-1], matrix[x][y-1] + 1)
        else:
          matrix [x][y] = min(matrix[x-1][y] + 1, matrix[x-1][y-1] + 1, matrix[x][y-1] + 1)
    return(matrix[size_x - 1][size_y - 1])

wordlist = wordinputtaker()
keyslist , countDictionary = funcwordcounter()
while "exit()" not in wordlist:
  wordcount = len(wordlist)
  closest = {}
  correctedsentencelist = []
  for i in range(wordcount):   
    str1 = wordlist[i]
    closest = {}
    sorteddifferences = []
    sortedstr2s = []
    correctedclosest = []
    differencekeysandvalues = {}
    for a in range(len(keyslist)):
      occuranceamount = []
      str2 = keyslist[a]
      difference = levenshtein(str1, str2)
      closestvalueslist = list(closest.values())
      closestkeyslist = list(closest.keys())
      sortedclosestvalueslist = sorted(closestvalueslist)  
      if len(closestkeyslist) == 0:
        closest[str2] = difference  
      if len(closestkeyslist) > 0: 
        if sortedclosestvalueslist[0] >= difference:
          closest[str2] = difference
    sorteddifferences = sorted(closest.values())
    for i in range(len(closest.values())):
      for key, value in closest.items():
        if sorteddifferences[i] == value and key not in sortedstr2s:
          sortedstr2s.append(key) 
    mindifference = min(sorteddifferences)
    if mindifference == 0:
      correctedword = sortedstr2s[0]
    if mindifference > 0:
      for key,value in closest.items():
        if value == mindifference:
          occuranceamount.append(countDictionary.get(key)) 
          differencekeysandvalues[key] = countDictionary.get(key)
          soccuranceamount = sorted(occuranceamount, reverse=True)
    for key,value in differencekeysandvalues.items():
      if value == soccuranceamount[0]:
        correctedclosest.append(key)
    if len(correctedclosest) == 1:
      correctedword = correctedclosest[0]
    if len(correctedclosest) > 1:
      if sorteddifferences[0] == sorteddifferences[1]:
        alphabeticsortedkeys = sorted(correctedclosest, key=str.lower)  
        correctedword = alphabeticsortedkeys[0]
    correctedsentencelist.append(correctedword)
  correctedsentence = ' '.join(correctedsentencelist)
  firstsentence = ' '.join(wordlist)
  if correctedsentence != firstsentence:
    print("Did you mean:",*correctedsentencelist)
  if correctedsentence == firstsentence:
    print("String you entered is correctly written!")
  wordlist = wordinputtaker()
else:
  print("See you next time...")