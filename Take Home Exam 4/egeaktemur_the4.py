# -*- coding: utf-8 -*-
"""egeaktemur_the4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qd-9Wn_SabHUwGk2aqNy_aqpzAsVYivv
"""

def getPartyName(promptData, partyNames):
  partyname = str(input("Please enter the name of the "+(promptData)+" party: "))
  firstcharofpartyname = partyname[0:1]
  while  partyname.lower().capitalize() in partyNames or firstcharofpartyname.isalpha() == False or " " in partyname:
    if firstcharofpartyname.isalpha() == False or " " in partyname:
      partyname =str(input("Invalid party name. Please enter again: "))
    if i == 1:
      if partyname.lower() == partyNames[0].lower(): 
        partyname = str(input("Party1 already exists. Please enter again: ")) 
    if i == 2:
      if partyname.lower() == partyNames[0].lower(): 
        partyname = str(input("Party1 already exists. Please enter again: "))
      if partyname.lower() == partyNames[1].lower(): 
        partyname =str(input("Party2 already exists. Please enter again: ")) 
    firstcharofpartyname = partyname[0:1]
  partyname = partyname.lower()
  partyNames.append(partyname.capitalize())
def getMenuOption():
  print("\nMenu:\n1. Enter results for a new city.\n2. Change results of a specific city.\n3. Show current results.\n4. Exit.\n")
  option = input("Select one of the options (1-4): ")
  optionposibilities = ["1","2","3","4"]
  while option not in optionposibilities:
    option = input("You have entered an invalid input for menu selection. Please enter again: ")
  return(option)
def getNewResults(citiesAndResults):
  cityname = input("Please enter the name of the city: ")
  if cityname.lower().capitalize() in citiesAndResults:
    print("You cannot enter ",cityname.lower().capitalize()," since this city has already been entered. If you want you can update the results of this city by using the 2nd menu option.")
  while cityname.isalpha() == False:
    cityname = input("Invalid city name. Please enter again: ") 
    if cityname.lower().capitalize() in citiesAndResults:
      print("You cannot enter ",cityname.lower().capitalize()," since this city has already been entered. If you want you can update the results of this city by using the 2nd menu option.")
  cityname = cityname.lower()
  if cityname.lower().capitalize() not in citiesAndResults:
    resultsforcity = str(input("Please enter results for "+ str(cityname.capitalize()) +": "))  
    party1Score = resultsforcity[0:resultsforcity.find("-")]
    resultsforcity = resultsforcity[resultsforcity.find("-")+1:]
    party2Score = resultsforcity[0:resultsforcity.find("-")]
    resultsforcity = resultsforcity[resultsforcity.find("-")+1:]
    party3Score = resultsforcity[0:]
    citiesAndResults.append(cityname.capitalize())
    citiesAndResults.append(party1Score)
    citiesAndResults.append(party2Score)  
    citiesAndResults.append(party3Score)
def changeResults(citiesAndResults):
  cityname2 = input("Please enter the name of the city: ")
  while cityname2.isalpha() == False:
    cityname2 = input("Invalid city name. Please enter again: ") 
  cityname2 = cityname2.lower()
  if cityname2.capitalize() not in citiesAndResults:
    print("You cannot change the result of  "+ str(cityname2.capitalize()) +"  since no result has been entered for this city yet.")
  if cityname2.capitalize() in citiesAndResults:
    resultsforcity2 = str(input("Please enter results for "+ str(cityname2.capitalize()) +": ")) 
    party1Score2 = resultsforcity2[0:resultsforcity2.find("-")]
    resultsforcity2 = resultsforcity2[resultsforcity2.find("-")+1:]
    party2Score2 = resultsforcity2[0:resultsforcity2.find("-")]
    resultsforcity2 = resultsforcity2[resultsforcity2.find("-")+1:]
    party3Score2 = resultsforcity2[0:]
    changecityloc = citiesAndResults.index(cityname2.capitalize())
    citiesAndResults[changecityloc+1] = party1Score2
    citiesAndResults[changecityloc+2] = party2Score2
    citiesAndResults[changecityloc+3] = party3Score2
def showResults(citiesAndResults,partyNames):
  if len(citiesAndResults)==0:
    print("No information available yet...")
  while len(citiesAndResults) >= 4:
    _party1 =float(citiesAndResults[1])
    _party2 =float(citiesAndResults[2])
    _party3 =float(citiesAndResults[3])
    if _party1 > _party2 and _party1> _party3:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[0],"is leading")
    if _party2 > _party1 and _party2> _party3:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[1],"is leading")
    if _party3 > _party2 and _party3> _party1:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[2],"is leading")
    if _party1 == _party2 and _party1> _party3:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[0],partyNames[1],"are leading")
    if _party2 == _party3 and _party2> _party1:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[1],partyNames[2],"are leading")
    if _party1 == _party3 and _party1> _party2:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[0],partyNames[2],"are leading")
    if _party1 == _party3 == _party2:
      print(citiesAndResults[0], _party1, _party2, _party3,"-->",partyNames[0],partyNames[1],partyNames[2],"are leading")
    citiesAndResults= citiesAndResults[4:]

#############################
## DO NOT MODIFY THIS CELL ##
## JUST RUN THIS WHEN YOU COMPLETE YOUR FUNCTIONS ##
#############################
####### MAIN PROGRAM ########
#############################

print("Welcome to this virtual local elections Python program.\n")

# get the names of the parties
partyNames = []                               # stores the valid party names
promptData = ["first", "second", "third"]
for i in range(3):
  getPartyName(promptData[i], partyNames)

# dataset variable initialization
citiesAndResults = []                         # stores the city-results information

# display the menu, get user's option, and process accordingly
option = getMenuOption()
while option != "4":
  if option == "1":
    getNewResults(citiesAndResults)           # function call to update citiesAndResults with a new city
  elif option == "2":
   changeResults(citiesAndResults)            # function call to update citiesAndResults for an existing city
  elif option == "3":
    showResults(citiesAndResults, partyNames) # function call to display current election results
  option = getMenuOption()

print("**********\nTerminating, good bye dear citizen!!! Do not forget to vote in elections :)")